import { BoxrecParseBoutsParseBouts } from '../event/boxrec.parse.bouts.parseBouts';
import { BoxrecProfileRole, BoxrecProfileTable } from './boxrec.profile.constants';
export declare abstract class BoxrecPageProfile extends BoxrecParseBoutsParseBouts {
    /**
     * The birth name of the person
     * @returns {string | null}
     */
    get birthName(): string | null;
    /**
     * Returns the place of which the person was born
     * @returns {string | null}
     */
    get birthPlace(): string | null;
    /**
     * Returns the date of birth of the person
     * @example // Gennady Golovkin would return "1982-04-08"
     * this field is found on all profile types (ex. Lou Duva https://boxrec.com/en/promoter/24678)
     * @returns {string | null}
     */
    get born(): string | null;
    /**
     * Returns the profile global id or id
     * @returns {number | null}
     */
    get globalId(): number | null;
    /**
     * Returns an object of various metadata
     * @returns {Object}
     */
    get metadata(): object | null;
    /**
     * Returns the full name
     * @returns {string}
     */
    get name(): string;
    /**
     * Additional info that was found on the profile but is unknown what to call it
     * @returns {string[][]}
     */
    get otherInfo(): string[][];
    get picture(): string;
    /**
     * Returns the current residency of the person
     * @returns {string | null}
     */
    get residence(): string | null;
    /**
     * Returns the Boxrec Role value because the values in the HTML might change and not the text
     * ex. proboxer -> Pro Boxing.  therefore to keep tests passing, return the `proboxer` role
     */
    get role(): BoxrecProfileRole[];
    /**
     * Returns whether the person is active or inactive in boxing
     * @example // returns "active"
     * @returns {string | null}
     */
    get status(): string | null;
    private get profileTableBody();
    /**
     * Returns bout information in an array
     * @param boutsListArr  Array of bouts
     * @param {{new(boxrecBodyBout: string, additionalData: (string | null)): U}} type  this variable is a class that is instantiated
     * a class is passed in and an array of that instantiated class is passed back
     * https://blog.rsuter.com/how-to-instantiate-a-generic-type-in-typescript/
     * @hidden
     * @returns {U[]}
     */
    protected getBouts<U>(boutsListArr: Array<[string, string | null]>, type: (new (headerColumns: string[], boxrecBodyBout: string, additionalData: string | null) => U)): U[];
    /**
     * Parses the profile table data found at the top of the profile
     * @hidden
     */
    protected parseProfileTableData(keyToRetrieve?: BoxrecProfileTable): string | void;
    private parseOtherInfo;
}
