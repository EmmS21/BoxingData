import { BoutsInterface } from '../../decorators/bouts.decorator';
import { OutputInterface } from '../../decorators/output.decorator';
import { Record, Stance } from '../boxrec.constants';
import { WeightDivision } from '../champions/boxrec.champions.constants';
import { BoxrecPageProfile } from './boxrec.page.profile';
import { BoxrecPageProfileBoxerBoutRow } from './boxrec.page.profile.boxer.bout.row';
import { BoxrecProfileBoxerOutput } from './boxrec.page.profile.constants';
/**
 * BoxRec Boxer Profile Page
 * <pre>ex. http://boxrec.com/en/boxer/155774</pre>
 */
export declare class BoxrecPageProfileBoxer extends BoxrecPageProfile implements BoutsInterface, OutputInterface {
    /**
     * Returns an array of bout information
     * The boxer's first bout is at the start of the array
     * The boxer's last or latest bout is at the end of the array
     * For all other roles, it is most recent first
     * @returns {BoxrecPageProfileBoxerBoutRow[]}
     */
    bouts: BoxrecPageProfileBoxerBoutRow[];
    output: BoxrecProfileBoxerOutput;
    /**
     * The number of bouts that this boxer has finished by way of KO/TKOing their opponent
     * @returns {number | null}
     */
    get KOs(): number | null;
    /**
     * The alias or nickname of the boxer
     * @returns {string | null}
     */
    get alias(): string | null;
    /**
     * Returns the date of their professional debut bout
     * @returns {string | null}
     */
    get debut(): string | null;
    /**
     * Returns the boxer's division
     * This value can be missing
     * @returns {WeightDivision | null}
     */
    get division(): WeightDivision | null;
    /**
     * Returns an array of things this fighter is enrolled under
     * todo `sport` is broken when it comes to interface (boxrec-requests), it needs to be fixed to replace string
     */
    get enrollments(): Array<{
        by: string;
        expires: string;
        id: number;
        sport: string;
    }>;
    /**
     * Returns whether the boxer has a bout scheduled or not
     * @example // Mike Tyson would return false
     * @returns {boolean}
     */
    get hasBoutScheduled(): boolean;
    /**
     * Returns the boxer's height
     * fractional symbols are changed to decimals.  ¼ = 0.25, ½ = 0.5, ¾ = 0.75
     * @returns {number[] | null}
     */
    get height(): number[] | null;
    /**
     * Returns the nationality of the boxer
     * @returns {string | null}
     */
    get nationality(): string | null;
    /**
     * Returns the number of bouts this boxer has been in (excluding currently scheduled)
     * @returns {number}
     */
    get numberOfBouts(): number;
    /**
     * Returns an array of where they stand in their division and in their country (by class)
     * @returns {number[][] | null}
     */
    get ranking(): number[][] | null;
    /**
     * Returns the boxer's BoxRec star rating
     * this is not their ranking in their division or in their country
     * @returns {number | null}
     */
    get rating(): number | null;
    /**
     * Returns the arm reach of the boxer
     * @returns {number[] | null}
     */
    get reach(): number[] | null;
    get record(): Record;
    /**
     * Returns the number of rounds this boxer has been in in their professional career
     * @returns {number | null}
     */
    get rounds(): number | null;
    /**
     * Returns the stance of the boxer, either orthodox or southpaw
     * @returns {string | null}
     */
    get stance(): Stance | null;
    /**
     * Returns a string on whether the boxer is suspended or not
     * @returns {string | null}
     */
    get suspended(): string | null;
    /**
     * Returns an array of belts that this boxer is currently holding
     * @returns {string[]}
     */
    get titlesHeld(): string[];
    /**
     * Returns if they are enrolled into VADA (Voluntary Anti-Doping Association)
     * @example // may return "enrolled"
     * @returns {string | null}
     */
    get vadacbp(): boolean;
    private parseRanking;
}
