import { BoxrecBasic, BoxrecJudge, BoxrecLocation, Record, WinLossDraw } from '../boxrec-pages/boxrec.constants';
import { WeightDivision } from '../boxrec-pages/champions/boxrec.champions.constants';
import { BoxingBoutOutcome } from '../boxrec-pages/event/boxrec.event.constants';
import { BoxrecTitles } from './boxrec-common.constants';
/**
 * Used to parse common columns
 */
export declare abstract class BoxrecCommonTablesColumnsClass {
    /**
     * @hidden
     */
    static parseAlias(htmlString: string): string | null;
    /**
     * @hidden
     */
    static parseCareer(htmlString: string): Array<number | null>;
    /**
     * Current and hopefully future proofing the name of the division to keep consistent
     * the value can be missing
     * @param htmlString   a (possibly) shortened version of weight divisions ex. light heavyweight -> light heavy
     * @return the weight division as a WeightDivision value otherwise we return the found value
     */
    static parseDivision(htmlString: string): WeightDivision | null;
    static parseId(htmlString: string): number | null;
    /**
     * @hidden
     */
    static parseJudges(htmlString: string): BoxrecJudge[];
    static parseLast6Column(htmlString: string): WinLossDraw[];
    /**
     * Can parse the id, town, region, country from multiple links
     * @param {string} htmlString   passed in HTML string, more than likely the contents of an HTML table column
     * @param {number} linkToLookAt Sometimes the format is `town, region, country`.
     *                              Other times it is `country, region, town`
     * @hidden
     * @returns {BoxrecLocation}
     */
    static parseLocationLink(htmlString: string, linkToLookAt?: number): BoxrecLocation;
    static parseName(htmlString: string): string;
    /**
     * @hidden
     */
    static parseNameAndId(htmlString: string): BoxrecBasic;
    /**
     * @hidden
     */
    static parseNumberOfRounds(htmlString: string): Array<number | null>;
    /**
     * @hidden
     */
    static parseOutcome(htmlString: string): WinLossDraw;
    /**
     * @hidden
     */
    static parseOutcomeByWayOf(htmlString: string, parseText?: boolean): BoxingBoutOutcome | string | null;
    static parseRating(htmlString: string, fullStarClassName: string, halfStarClassName: string): number | null;
    static parseRecord(htmlString: string): Record;
    /**
     * @hidden
     */
    static parseReferee(htmlString: string): BoxrecBasic;
    /**
     * todo parse if `vacant` or not (is in name)
     * BoxRec currently returns belts in order of ID ASC.  If that changes, add custom sorting logic here
     * @hidden
     */
    static parseTitles(htmlString: string): BoxrecTitles[];
    /**
     * @hidden
     */
    static parseWeight(htmlString: string): number | null;
    private static parseIdAndName;
}
