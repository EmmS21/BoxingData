"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.requestWrapper = exports.requestWrapperFullResponse = exports.getRoleOfHTML = void 0;
var $ = require("cheerio");
var node_fetch_1 = require("node-fetch");
var url_1 = require("url");
var boxrec_requests_constants_1 = require("./boxrec-requests.constants");
/**
 * Takes a person's profile and returns what kind of profile role it is
 * @param html
 */
var getRoleOfHTML = function (html) {
    var $a = $.load(html);
    var href = $a("link[rel='canonical']").attr("href");
    if (href) {
        var matches_1 = href.match(/boxrec\.com\/en\/(\w+)\/\d+/);
        if (matches_1) {
            var roleValues = Object.values(boxrec_requests_constants_1.BoxrecRole);
            var val = roleValues.find(function (value) { return value === matches_1[1]; });
            if (val) {
                return val;
            }
        }
    }
    return null;
};
exports.getRoleOfHTML = getRoleOfHTML;
function requestWrapperFullResponse(url, cookies, parametersOrQueryString) {
    return __awaiter(this, void 0, void 0, function () {
        var queryString, urlWithQueryString;
        return __generator(this, function (_a) {
            try {
                if (parametersOrQueryString && (parametersOrQueryString === null || parametersOrQueryString === void 0 ? void 0 : parametersOrQueryString.method) === "POST") {
                    return [2 /*return*/, (0, node_fetch_1.default)(url, __assign(__assign({}, parametersOrQueryString), { headers: __assign(__assign({}, parametersOrQueryString.headers), { Cookie: cookies || "" }) }))];
                }
                queryString = new url_1.URLSearchParams(parametersOrQueryString);
                urlWithQueryString = "".concat(url, "?").concat(queryString.toString());
                return [2 /*return*/, (0, node_fetch_1.default)(urlWithQueryString, {
                        headers: {
                            Cookie: cookies || "",
                        },
                    })];
            }
            catch (e) {
                if (e.message.includes("recaptcha")) {
                    throw new Error("429 has occurred.\nThis is because of too many requests to BoxRec too quickly.\nThis package has not found a workaround at this time.\nPlease open a browser and login to BoxRec with this account and then resume.");
                }
                throw e;
            }
            return [2 /*return*/];
        });
    });
}
exports.requestWrapperFullResponse = requestWrapperFullResponse;
/**
 * This acts as a middleware between the package and the requests to BoxRec
 * For example if we hit a 429 "Too Many Requests" we want to return a proper message to the callers
 */
function requestWrapper(url, cookies, parametersOrQueryString) {
    return __awaiter(this, void 0, void 0, function () {
        var response;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, requestWrapperFullResponse(url, cookies, parametersOrQueryString)];
                case 1:
                    response = _a.sent();
                    return [2 /*return*/, response.text()];
            }
        });
    });
}
exports.requestWrapper = requestWrapper;
//# sourceMappingURL=helpers.js.map